version: '3.8'

services:

  db:
    image: postgres:15.1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - diploma_15_pg_data:/var/lib/postgresql/data/

  run_migrations:
    image: ${DOCKERHUB_USER}/diploma_15:latest
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate

  api:
    image: ${DOCKERHUB_USER}/diploma_15:latest
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      run_migrations:
        condition: service_completed_successfully

  bot:
    image: ${DOCKERHUB_USER}/diploma_15:latest
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      run_migrations:
        condition: service_completed_successfully
    command: python manage.py runbot

  collect_static:
    image: ${DOCKERHUB_USER}/diploma_15:latest
    env_file: .env
    command: python3 manage.py collectstatic -c --no-input
    volumes:
      - django_static:/opt/app/static/

  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
      collect_static:
        condition: service_completed_successfully
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static/

volumes:
  diploma_15_pg_data:
  django_static:
